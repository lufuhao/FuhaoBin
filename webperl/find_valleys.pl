#!/usr/bin/env perl
#https://github.com/josephryan/estimate_genome_size.pl/blob/master/estimate_genome_size.pl
#find_valleys.pl fastq.counts_0.histo
# Copyright (C) 2012,2013 Joseph F. Ryan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;

our $VERSION = 0.03;
our $AUTHOR  = 'Joseph F. Ryan <joseph.ryan@whitney.ufl.edu>';

MAIN: {
    my $opt_version = 0;
    my $opt_help = 0;
    my $opt_results = Getopt::Long::GetOptions(  "version" => \$opt_version,
                                      "help" => \$opt_help);

    $opt_version && version();
    pod2usage({-exitval => 0, -verbose => 2}) if $opt_help;

    my $file = $ARGV[0] or usage();
    open IN, $file or die "cannot open $file:$!";
    my $first = <IN>;
    chomp $first;
    $first =~ m/^\s*\d+\s+(\d+)\s*$/ || die "unexpected input file format\n";
    my $val = $1;
    my $last_line = $first;
    while (my $line = <IN>) {
        chomp $line;
        $line =~ m/^\s*\d+\s+(\d+)\s*$/ || die "unexpected input file format\n";
        my $current_val = $1;
        if ($current_val > $val) {
            my $diff = $current_val - $val;
            print "valley: $line (diff = $diff) - LAST: $last_line\n";
        }
        $last_line = $line;
        $val = $current_val;
    }
}

sub usage {
    die "usage: $0 [--version] [--help] HISTO_FILE\n";
}

sub version {
    die "find_valleys.pl $VERSION\n";
}

__END__
=head1 NAME
B<find_valleys.pl> - identify possible peaks in histogram data
=head1 AUTHOR
Joseph F. Ryan <joseph.ryan@whitney.ufl.edu>
=head1 SYNOPSIS
find_valleys.pl HISTO_FILE
=head1 DESCRIPTION
The script takes histogram file from jellyfish and identifies places where
the values begin to descend. It will print the descending coordinates as well
as the previous coordinates. It is suggested to interpret these results by
examining the actual histogram file and a plot generated by jellyplot.pl
=head1 BUGS
Please report them to <joseph.ryan@whitney.ufl.edu>
=head1 COPYRIGHT
Copyright (C) 2012 Joseph F. Ryan 
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
=cut

